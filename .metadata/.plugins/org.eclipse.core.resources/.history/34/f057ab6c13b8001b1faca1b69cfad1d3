/*
 * Recaudacion.c
 *
 *  Created on: May 15, 2021
 *      Author: Jonatan Barbuto
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include "Recaudacion.h"

#define FREE 1
#define BUSY 0

void initArrayRecaudacion(eRecaudacion array[], int size)
{
	int i;

	if(array != NULL && size > 0)
	{
		for(i = 0; i < size; i++)
		{
			array[i].isEmpty = FREE;
		}
	}
}


int arrayEmptyRecaudacion(eRecaudacion array[], int size)
{
	int rtn = 0;
	int i;

	if(array != NULL && size > 0)
	{
		for(i = 0; i < size; i++)
		{
			if(array[i].isEmpty == BUSY)
			{
				rtn ++;
			}
		}
	}
	return rtn;
}

int searchEmptyRecaudacion(eRecaudacion array[], int *pEmpty, int size)
{
	int i;
	int rtn = -1;

	if(array != NULL && size > 0)
	{
		for(i = 0; i < size; i++)
		{
			if(array[i].isEmpty == FREE)
			{
				*pEmpty = i;
				rtn = 0;
				break;
			}
		}
	}

	return rtn;
}

void showRecaudacion(eRecaudacion array[], int index)
{
	printf("+-------------------------------------------------------------------------------------------------+\n");
	printf("|%10s  %10s  %20s  %20s  %20s  %20s| \n", "ID REC", "ID CON", "MES", "TIPO", "ESTADO", "IMPORTE");
	printf("+-------------------------------------------------------------------------------------------------+\n");
	printf("|%10d|  %10d|  %10d|  %20s| %20s| %10.2f| \n",array[index].idRecaudacion, array[index].idContribuyente,
			array[index].mes, array[index].tipo, array[index].estado, array[index].importe);
}
// Falta acomodar aca para abajo
eRecaudacion eRecaudacion_CargarDatos(void)
{
	eRecaudacion auxiliar;

	do
	{
		auxiliar.idContribuyente = Get_IntRange("\nIngrese id del contribuyente --> ", "Error, reingrese --> ", 1000, 1100, 3);
	}while();

	// El id se cambia en la siguiente funcion
	return auxiliar;
}

int eRecaudacion_ObtenerID(int *idRecaudacion)
{
	int rtn;
	rtn = *idRecaudacion +=1;
	return rtn;
}

int eRecaudacion_Alta(eRecaudacion array[],int *idRecaudacion, int size)
{
	int rtn = 0;
	eRecaudacion auxRecaudacion;

	int index = searchEmptyRecaudacion(array, size);

	if(index != -1)
	{

			auxRecaudacion = eRecaudacion_CargarDatos();

		//	ePantalla_MostrarUno(auxPantalla);
			//mostrar antes de guardar
			if(Validate_Exit_SN("Desea continuar Si[s] - No[n] --> ", "Error, reingrese --> "))
			{

			//	auxContribuyente.idContribuyente = ePantalla_ObtenerID(&*idPantalla);

				auxRecaudacion.isEmpty = BUSY;
				array[index] = auxRecaudacion;

				rtn = 1;
			}
			else
			{
				printf("Alta Cancelada");
			}

		}

		return rtn;
}
