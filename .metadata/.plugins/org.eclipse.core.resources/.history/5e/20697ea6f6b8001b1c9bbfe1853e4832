/*
 * Informes.c
 *
 *  Created on: May 18, 2021
 *      Author: jonat
 */

#include "Informes.h"
#define FREE 1
#define BUSY 0



eRecaudacion cargarDatosRecaudacion(eContribuyente arrayC[], int sizeC)
{
	eRecaudacion auxiliar;
	int auxId, indexC;
	int reintentos = 3;

	do // idContribuyente
	{
		auxId = Get_IntRange("\nIngrese id del contribuyente para la nueva recaudacion --> ", "\nError, reingrese", 1000, 1100, reintentos);
		indexC = buscarIdContribuyente(arrayC, sizeC, auxId);
		if(indexC == -1)
		{
			printf("\nContribuyente no encontrado\n");
			reintentos--;
		}
		if(reintentos == 1)
		{
			break;
		}
	}while(indexC == -1);

	if(indexC != -1)
	{
		// mes
		auxiliar.mes = Get_IntRange("\nIngrese mes --> ", "\nError, reingrese --> ", 1, 12, 3);

		do // Tipo
		{
			Get_OnlyAlphabetString("\nIngrese tipo (ARBA, IIBB, GANANCIAS) --> ", "\nError, reingrese --> ", auxiliar.tipo, MAX_CHAR, 3);
		}while(strcmp(auxiliar.tipo, "ARBA") == 0 || strcmp(auxiliar.tipo, "IIBB") == 0
				|| strcmp(auxiliar.tipo, "GANANCIAS") == 0);

		auxiliar.idContribuyente = arrayC[indexC].idContribuyente;

		auxiliar.importe = Get_Float("\nIngrese importe --> ", "\nError, reingrese --> ", 3);
	}
	return auxiliar;
} // Fin cargarDatosRecaudacion

int altaRecaudacion(eRecaudacion arrayR[],int *idRecaudacion, int sizeR, eContribuyente arrayC[], int sizeC)
{
	int rtn = 0;
	int index;
	eRecaudacion auxRecaudacion;
	auxRecaudacion.importe = 0;

	index = buscarLibreRecaudacion(arrayR, sizeR);

	if(index != -1)
	{
		auxRecaudacion = cargarDatosRecaudacion(arrayC, sizeC);

		if(auxRecaudacion.importe != 0)
		{
			if(Validate_Exit_SN("Desea continuar Si[s] - No[n] --> ", "Error, reingrese --> ", 3) == 1)
			{
				auxRecaudacion.idRecaudacion = eRecaudacion_ObtenerID(&*idRecaudacion);
				strcpy(auxRecaudacion.estado, "ADEUDADO");
				auxRecaudacion.isEmpty = BUSY;
				arrayR[index] = auxRecaudacion;
				rtn = 1;
				mostrarTituloRecaudacion();
				mostrarRecaudacion(arrayR, index);
				system("pause");
			}
			else
			{
				printf("Alta Cancelada");
			}
		}
	}
		return rtn;
} // Fin altaRecaudacion
